pipeline {
   
    agent any

    environment {
        AWS_REGION = 'us-east-1' // Change to your desired AWS region
        AWS_CREDENTIALS_ID = '1'
        TF_DIR = 'terraform'
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                echo "Checking out Terraform code from private repository..."
                checkout scm
            }
        }

        stage('Terraform Init') {
            steps {
                echo "Running Terraform Init in ${env.TF_DIR}..."
                dir(env.TF_DIR) {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding', 
                        credentialsId: env.AWS_CREDENTIALS_ID,
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                        // Set the region via environment variable
                        withEnv(["AWS_REGION=${env.AWS_REGION}"]) {
                            sh 'terraform init -input=false'
                        }
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                echo "Running Terraform Plan in ${env.TF_DIR}..."
                dir(env.TF_DIR) {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding', 
                        credentialsId: env.AWS_CREDENTIALS_ID,
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                        withEnv(["AWS_REGION=${env.AWS_REGION}"]) {
                            sh 'terraform plan -out=tfplan -input=false'
                        }
                    }
                }
            }
        }

        stage('Confirm Apply') {
            steps {
                input "Apply Terraform plan to create/update ECS Cluster?"
            }
        }

        stage('Terraform Apply') {
            steps {
                echo "Running Terraform Apply in ${env.TF_DIR}..."
                dir(env.TF_DIR) {
                    withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding', 
                        credentialsId: env.AWS_CREDENTIALS_ID,
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                        withEnv(["AWS_REGION=${env.AWS_REGION}"]) {
                            sh 'terraform apply -auto-approve tfplan'
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished. Cleaning workspace.'
            cleanWs()
        }
    }
}